{
  "{\"sourceRoot\":\"/home/fallen-sama/playground/Sesion 5/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/fallen-sama/playground/Sesion 5\",\"filename\":\"/home/fallen-sama/playground/Sesion 5/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fallen-sama/playground/Sesion 5\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/fallen-sama/playground/Sesion 5/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/fallen-sama/playground/Sesion 5",
      "filename": "/home/fallen-sama/playground/Sesion 5/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/fallen-sama/playground/Sesion 5",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fallen-sama/playground/Sesion 5/src/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fallen-sama/playground/Sesion 5/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fallen-sama/playground/Sesion 5/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//List command\n_yargs[\"default\"].command({\n  command: 'list',\n  describe: 'list the searched values',\n  builder: {\n    q: {\n      describe: 'query name',\n      demandOption: false,\n      type: 'string'\n    },\n    v: {\n      describe: 'value of the query',\n      demandOption: false,\n      type: 'string'\n    },\n    p: {\n      describe: 'page number',\n      demandOption: false,\n      type: 'int'\n    }\n  },\n  handler: function handler(argv) {\n    //Default URL\n    var url = 'https://rickandmortyapi.com/api/character/'; //Add Query and Value\n\n    if (argv.q && argv.v) {\n      //Add parameter\n      url += '?'; //For each of the queries and values\n\n      for (var i = 0; i < argv.q.length; i++) {\n        //Append to the URL\n        url += argv.q[i] + '=' + argv.v[i]; //If it's not finished add an &\n\n        if (i < argv.q.length - 1) url += '&';\n      } //If there is a page argument add the &\n\n\n      if (argv.p) url += '&';\n    } //Pages \n\n\n    if (argv.p) url += 'page=' + argv.p; //Request\n\n    (0, _request[\"default\"])({\n      url: url,\n      json: true\n    }, function (error, response) {\n      var page_error = false; //If there argument is valid\n\n      if (argv.p) //Pages not in range\n        if (argv.p > response.body.info.pages) {\n          page_error = true;\n          console.log(\"This page number doesn't exist.\");\n        } //If there is no error\n\n      if (!page_error) {\n        //Loop and print all the names of the results\n        response.body.results.forEach(function (element, index) {\n          console.log(\"\".concat(index + 1, \". Name: \").concat(element.name));\n        }); //List the number of pages if it's greater than one\n\n        if (response.body.info.pages > 1) {\n          console.log(\"There are a total of \".concat(response.body.info.pages, \" pages.\"));\n        }\n      }\n    });\n  }\n}); //View command\n\n\n_yargs[\"default\"].command({\n  command: 'view',\n  describe: 'view the character',\n  builder: {\n    q: {\n      describe: 'query name',\n      demandOption: false,\n      type: 'string'\n    },\n    v: {\n      describe: 'value of the query',\n      demandOption: false,\n      type: 'string'\n    },\n    i: {\n      describe: 'character index',\n      demandOption: false,\n      type: 'int'\n    }\n  },\n  handler: function handler(argv) {\n    //Default URL\n    var url = 'https://rickandmortyapi.com/api/character/'; //Add Query and Value\n\n    if (argv.q && argv.v) {\n      //Add parameter\n      url += '?'; //For each of the queries and values\n\n      for (var j = 0; j < argv.q.length; j++) {\n        //Append to the URL\n        url += argv.q[j] + '=' + argv.v[j]; //If it's not finished add an &\n\n        if (j < argv.q.length - 1) url += '&';\n      }\n    } //Index fix\n\n\n    if (Math.floor(argv.i / 20) > 0) {\n      url += '&page=' + (Math.floor((argv.i + 1) / 20) + 1);\n      console.log(url);\n    } //Request\n\n\n    (0, _request[\"default\"])({\n      url: url,\n      json: true\n    }, function (error, response) {\n      var index_error = false;\n      var index = 0; //If index exists set it\n\n      if (argv.i) index = (argv.i - 1) % 20; //If there argument is valid\n\n      if (index) //Index not in range\n        if (index > response.body.info.count) {\n          index_error = true;\n          console.log(\"There is no character on this index.\");\n        } //If there is no error\n\n      if (!index_error) {\n        //Loop and print all the names of the results\n        console.log(response.body.results[index].name);\n        Object.entries(response.body.results[index]).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          console.log(\"\".concat(key, \": \").concat(value));\n        }); //List the number of index if it's greater than one\n\n        if (response.body.info.count > 1) {\n          console.log(\"There are a total of \".concat(response.body.info.count, \" characters with your description.\"));\n        }\n      }\n    });\n  }\n}); //Yargs Parse\n\n\n_yargs[\"default\"].parse();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "yargs",
        "command",
        "describe",
        "builder",
        "q",
        "demandOption",
        "type",
        "v",
        "p",
        "handler",
        "argv",
        "url",
        "i",
        "length",
        "json",
        "error",
        "response",
        "page_error",
        "body",
        "info",
        "pages",
        "console",
        "log",
        "results",
        "forEach",
        "element",
        "index",
        "name",
        "j",
        "Math",
        "floor",
        "index_error",
        "count",
        "Object",
        "entries",
        "key",
        "value",
        "parse"
      ],
      "mappings": "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",
      "sourceRoot": "/home/fallen-sama/playground/Sesion 5/src",
      "sourcesContent": [
        "import yargs from 'yargs';\nimport request from 'request';\n\n//List command\nyargs.command({\n    command: 'list',\n    describe: 'list the searched values',\n    builder: {\n        q: {\n            describe: 'query name',\n            demandOption: false,\n            type: 'string',\n        },\n        v: {\n            describe: 'value of the query',\n            demandOption: false,\n            type: 'string',\n        },\n        p: {\n            describe: 'page number',\n            demandOption: false,\n            type: 'int',\n        },\n    },\n    handler: function(argv) {\n        //Default URL\n        let url = 'https://rickandmortyapi.com/api/character/';\n\n        //Add Query and Value\n        if (argv.q && argv.v) {\n            //Add parameter\n            url += '?';\n            //For each of the queries and values\n            for (let i = 0; i < argv.q.length; i++){\n                //Append to the URL\n                url += argv.q[i] + '=' + argv.v[i];\n                //If it's not finished add an &\n                if (i < argv.q.length - 1)\n                    url += '&';\n            }\n            //If there is a page argument add the &\n            if (argv.p)\n                url += '&';\n        }\n\n        //Pages \n        if (argv.p)\n            url += 'page=' + argv.p;\n\n        //Request\n        request({ url: url, json: true }, (error, response) => {\n            let page_error = false;\n\n            //If there argument is valid\n            if (argv.p)\n                //Pages not in range\n                if (argv.p > response.body.info.pages) {\n                    page_error = true;\n                    console.log(\"This page number doesn't exist.\")\n                }\n            \n            //If there is no error\n            if (!page_error) {\n                //Loop and print all the names of the results\n                response.body.results.forEach((element, index) => {\n                    console.log(`${index + 1}. Name: ${element.name}`);\n                });\n                //List the number of pages if it's greater than one\n                if (response.body.info.pages > 1) {\n                    console.log(`There are a total of ${response.body.info.pages} pages.`);\n                }\n            }\n        });\n    },\n});\n\n//View command\nyargs.command({\n    command: 'view',\n    describe: 'view the character',\n    builder: {\n        q: {\n            describe: 'query name',\n            demandOption: false,\n            type: 'string',\n        },\n        v: {\n            describe: 'value of the query',\n            demandOption: false,\n            type: 'string',\n        },\n        i: {\n            describe: 'character index',\n            demandOption: false,\n            type: 'int',\n        },\n    },\n    handler: function(argv) {\n        //Default URL\n        let url = 'https://rickandmortyapi.com/api/character/';\n\n        //Add Query and Value\n        if (argv.q && argv.v) {\n            //Add parameter\n            url += '?';\n            //For each of the queries and values\n            for (let j = 0; j < argv.q.length; j++){\n                //Append to the URL\n                url += argv.q[j] + '=' + argv.v[j];\n                //If it's not finished add an &\n                if (j < argv.q.length - 1)\n                    url += '&';\n            }\n        }\n\n        //Index fix\n        if (Math.floor((argv.i)/20) > 0) {\n            url += '&page=' + (Math.floor((argv.i + 1)/20)+1);\n            console.log(url);\n        }\n\n        //Request\n        request({ url: url, json: true }, (error, response) => {\n            let index_error = false;\n            let index = 0;\n\n            //If index exists set it\n            if (argv.i)\n                index = ((argv.i - 1)%20);\n\n            //If there argument is valid\n            if (index)\n                //Index not in range\n                if (index > response.body.info.count) {\n                    index_error = true;\n                    console.log(\"There is no character on this index.\")\n                }\n            \n            //If there is no error\n            if (!index_error) {\n                //Loop and print all the names of the results\n                console.log(response.body.results[index].name);\n                Object.entries(response.body.results[index]).forEach(([key, value]) => {\n                    console.log(`${key}: ${value}`);\n                });\n                //List the number of index if it's greater than one\n                if (response.body.info.count > 1) {\n                    console.log(`There are a total of ${response.body.info.count} characters with your description.`);\n                }\n            }\n        });\n    },\n});\n\n//Yargs Parse\nyargs.parse();"
      ]
    },
    "sourceType": "script",
    "mtime": 1570715331714
  }
}